include "application.conf"

# ****************************************** #
# ********** Redis configuration *********** #
# ****************************************** #
redis {
  // standalone, sentinel, or cluster
  client-type = "cluster"

  // The number of milliseconds to wait before flushing commands to Netty.
  flush-interval = 10

  // The timeout (milliseconds) for waiting on establishing connections and for async requests.
  connection-timeout = 1000

  cluster {
    // Initial node-hostname and port from which the full cluster topology will be derived.
    // This node must not be removed during operation.
    // Just one node because undefined behaviour occurs when you list nodes that are in disjoint cluster partitions.
    // Instead of failover capability, you end up with multiple points of failure.
    seed.server.host = "pouring-gibbon-redis-seed"
    seed.server.port = 6379

    // 
    // Time to wait between cluster topology refreshes
    refresh-interval = 60

    // See com.lambdaworks.redis.ReadFrom.valueOf
    read-from = "masterPreferred"
  }

  // can be pattern or channel
  sampler {
    // maximum memory in bytes for each node, beyond which should trigger a scaling up of cluster
    max.memory = 377487360 // 360 MB

    min.memory = 31457280 // 30 MB

    // number of consecutive times that the memory is sampled and is above the max.memory above, before scaling up
    // redis nodes
    scaleup.threshold = 6
    
    scaledown.threshold = 20

    interval = 10 // interval (seconds) to take samples of memory usage
  }
}

kubernetes {
  statefulset-name = "pouring-gibbon-redis"
  
  minimum-cluster-size = 6

  threshold = 1 // threshold for period

  period = 10 // seconds, period to check if threshold is passed

  conductor {
    polling-period: 30 // seconds, period to poll for new redis pods added to statefulset
  }

  new-nodes-number = 2

  retired-nodes-number = 2
}

# Cornucopia

# -- Default